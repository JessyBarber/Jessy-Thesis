  // Serial.print(maxAccelX);
  // Serial.print(" ");
  // Serial.print(maxAccelY);
  // Serial.print(" ");
  // Serial.print(maxAccelZ);
  // Serial.print(" ");
  // Serial.print(maxDispX);
  // Serial.print(" ");
  // Serial.print(maxDispY);
  // Serial.print(" ");
  // Serial.println(maxDispZ);

  // // PRINT RAW ACCEL VALUES
  // for (int i = 0; i < sample_n; i++) {
  //   Serial.print(xAccel[i]);
  //   Serial.print(" ");
  //   Serial.print(yAccel[i]);
  //   Serial.print(" ");
  //   Serial.println(zAccel[i]);
  // }

  // ---------- UNDER CONSTRUCTION ----------
  // // Lowpass filter
  // double filteredXAccel[sample_n] {};
  // double filteredYAccel[sample_n] {};
  // double filteredZAccel[sample_n] {};

  // int filterWindowSize = 5; // Adjust this value based on the noise characteristics of your signal

  // lowPassFilter(xAccel, filteredXAccel, filterWindowSize);
  // lowPassFilter(yAccel, filteredYAccel, filterWindowSize);
  // lowPassFilter(zAccel, filteredZAccel, filterWindowSize);
  // ---------- UNDER CONSTRUCTION ----------

// //PRINT ALL FFT VALS -> FOR PLOTTING FFT PEAKS
  // for (int i = 0; i < sample_n; i++) {
  //   Serial.print(xAccel[i]);
  //   Serial.print(" ");
  //   Serial.print(yAccel[i]);
  //   Serial.print(" ");
  //   Serial.println(zAccel[i]);
  // }

  // //PRINTING MAX FFTS VALS
  // Serial.print(findMax(xAccel));
  // Serial.print(" ");
  // Serial.print(findMax(yAccel));
  // Serial.print(" ");
  // Serial.println(findMax(zAccel));

  // ---------- UNDER CONSTRUCTION ----------
  // // CONVERTING MAX INDEX TO ACTUAL FREQ
  // double threshold = 0.2;
  // int maxIndexX = findMaxIndex(xAccel, threshold);
  // int maxIndexY = findMaxIndex(yAccel, threshold);
  // int maxIndexZ = findMaxIndex(zAccel, threshold);

// Serial.print("Frequency X: ");
  // Serial.println(frequencyX);
  // Serial.print("Frequency Y: ");
  // Serial.println(frequencyY);
  // Serial.print("Frequency Z: ");
  // Serial.println(frequencyZ);

  // Serial.print(frequencyX);
  // Serial.print(" ");
  // Serial.print(frequencyY);
  // Serial.print(" ");
  // Serial.println(frequencyZ);


  // ---------- UNDER CONSTRUCTION ----------

  // //SEND DATA PACKETS 
  // double data1 = findMax(xAccel);
  // double data2 = findMax(yAccel);
  // double data3 = findMax(zAccel);

  // uint8_t bytes[sizeof(real_x_axis)];
  // for (int i = 0; i < sizeof(real_x_axis); i += sizeof(double)) {
  //   double val = real_x_axis[i / sizeof(double)];
  //   memcpy(&bytes[i], &val, sizeof(double));
  // }